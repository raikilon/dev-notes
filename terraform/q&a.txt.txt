What is Terraform's primary function?;Terraform's primary function is to create, modify, and destroy infrastructure resources to match the desired state described in a Terraform configuration.
What approach does Terraform follow?;Terraform follows a declarative approach.
What are the four primary phases of the Terraform lifecycle?;The four primary phases are init, plan, apply, and destroy.
What is the purpose of Terraform state?;Terraform state stores the mapping between your configuration and the real-world resources it manages, and is used to create plans and make changes.
Why is state locking important?;State locking is crucial for team environments to prevent concurrent runs from corrupting the state file.
What are Terraform Providers?;Providers are plugins that allow Terraform to interact with various infrastructure platforms and services.
What are Terraform Resources?;Resources declare infrastructure objects Terraform will manage.
What are Terraform Data Sources used for?;Data Sources fetch information from a provider about existing resources or compute data for use elsewhere in the configuration.
What is the purpose of Terraform Variables?;Variables parameterize configurations, removing hard-coded values and defining inputs.
What are Terraform Outputs used for?;Outputs expose values from your configuration for use by other Terraform configurations or for user information.
What are Terraform Modules?;Modules are reusable containers of Terraform resources that promote code reuse, organization, and standardization.
What are Terraform Locals used for?;Locals define named expressions within a module to simplify complex logic or avoid repetition.
What is the default mode for storing Terraform state?;Local state, storing state in a terraform.tfstate file locally.
What are the benefits of using remote state?;Collaboration, locking, versioning, secure storage, and separation from code.
Name three common remote backends for Terraform state.;HCP Terraform/Terraform Cloud, AWS S3, Azure Blob Storage, Google Cloud Storage (GCS).
What is the preferred method for sharing state outputs in HCP Terraform and why?;The tfe_outputs data source is preferred because it shares only output values, requiring workspace-specific permissions, unlike terraform_remote_state which requires read access to the entire source state file.
How can you migrate local state to a remote backend like HCP Terraform?;By adding a cloud {} block and then running terraform init.
What is the command to bring existing infrastructure under Terraform management?;terraform import <resource_address> <provider_id>.
What is the purpose of the import {} block (Terraform 1.5+)?;It allows for configuration-driven import, enabling plan and apply to handle import generation and state updates.
What do Terraform CLI Workspaces allow you to do?;Manage multiple state files for the same configuration using the same backend configuration, useful for creating parallel, distinct environments.
How can you access the current CLI workspace name in your configuration?;Via terraform.workspace.
What does each HCP Terraform Workspace have?;Its own separate state, variables, run history, and permissions.
What is a recommended segmentation strategy for large configurations in HCP Terraform?;Break down large configurations into smaller workspaces to reduce blast radius, manage change rates, apply least privilege, ease maintenance, and enable team delegation.
What are the key attributes you can define within a variable block?;type, description, default, sensitive, and validation.
What is the purpose of sensitive = true for a variable?;It prevents the variable's value from being shown in CLI output or UI logs.
List the sources for setting variable values in order of precedence (lowest to highest).;Defaults in variable blocks, terraform.tfvars or *.auto.tfvars, -var-file=<filename>.tfvars, -var='name=value', TF_VAR_ environment variables. For HCP Terraform, add: Run Specific Variables, Workspace-Specific Variables, Variables from applied Variable Sets.
What are the two types of variables you can define in HCP Terraform?;Terraform Variables (standard inputs) and Environment Variables (for the execution environment).
What are Variable Sets in HCP Terraform?;Reusable collections of variables applied to multiple workspaces.
What are the three main workflows for HCP Terraform runs?;CLI-driven, UI/VCS-driven, and API-driven.
What happens in the UI/VCS-driven workflow in HCP Terraform?;Commits/PRs to a linked VCS repo branch automatically trigger runs in HCP Terraform.
What are the run modes available in HCP Terraform?;Plan and apply, Plan only, Refresh state only, Destroy mode.
What are the key components for user management in HCP Terraform?;Users, Teams, and Organizations.
How can private modules and providers be distributed within an organization using HCP Terraform?;Via the Private Module Registry.
What is the naming convention for repositories to be published to the Private Module Registry?;terraform-<PROVIDER>-<NAME>.
How are modules from the Private Module Registry referenced in code?;<HOSTNAME>/<ORGANIZATION>/<MODULE_NAME>/<PROVIDER_NAME>.
What is "No-Code Provisioning" in HCP Terraform?;A feature (Plus Edition) to deploy modules from the private registry via the UI without writing HCL.
What is the purpose of policies in HCP Terraform?;To enforce security standards, compliance, cost controls, and best practices on Terraform runs.
What are the two policy frameworks supported by HCP Terraform?;Sentinel and OPA (Open Policy Agent).
What are the enforcement levels for Sentinel policies?;Advisory, Soft Mandatory, and Hard Mandatory.
How can Sentinel policies be tested?;Using the sentinel test command with mock data.
How can OPA policies be tested?;Using opa test with JSON plan data.
What types of expressions can be used in Terraform?;References, Arithmetic, Equality, Comparison, Logical, Function Calls, Conditional, Collection Transformations, String Templates.
What is the syntax for a conditional expression in Terraform?;condition ? true_val : false_val.
What is the purpose of a for expression in Terraform?;To transform one collection (list, set, map, tuple) into another (list or map).
What is a splat expression ([*]) used for?;It's a shorthand for a for expression to get a specific attribute from all elements in a list.
What is the count meta-argument used for in a resource or module block?;To create multiple instances of a resource or module based on a whole number.
How are instances created with count tracked?;As a list (e.g., aws_instance.server[0]).
What is the for_each meta-argument used for?;To create multiple instances based on the elements of a map or a set of strings.
How are instances created with for_each tracked?;As a map, where keys are from the input map/set (e.g., aws_iam_user.users["alice"]).
When should for_each generally be preferred over count?;For non-trivial cases where instance identity needs to be tied to a specific key, as it's more stable against changes.
What is the depends_on meta-argument used for?;To specify explicit dependencies when Terraform cannot automatically infer them.
List three lifecycle block arguments and their purpose.;create_before_destroy = true (creates replacement before destroying old), prevent_destroy = true (prevents accidental destruction), ignore_changes = [attribute_name, ...] (ignores changes to specified attributes).
What is the provider meta-argument used for in a resource?;To specify which provider configuration to use when multiple configurations exist for the same provider.
Name three categories of built-in functions in Terraform.;Numeric, String, Collection, Encoding, Type Conversion, Filesystem, Date/Time, Hashing/Crypto, IP Network.
Why should functions like timestamp() and uuid() be used with caution?;They produce a new value on each run, potentially causing plan diffs.
What is the purpose of a locals block?;To define named expressions within a module scope, making code DRY and improving readability.
How are values defined in a locals block referenced?;Using local.NAME.
What are dynamic blocks used for?;To dynamically construct multiple nested blocks within a resource, data, provider, or provisioner block based on a collection.
How do you define a test case in a Terraform test file (.tftest.hcl)?;Using a run {} block, specifying a command like plan, apply, or destroy.
What is the assert { ... } block used for in Terraform testing?;To define assertions within a run block, checking a condition and providing an error message if false.
What is the purpose of test mocking in Terraform (v1.7+)?;To test modules without provisioning real infrastructure by defining mock providers, resources, and data sources.
Name two static analysis tools for Terraform code.;Tflint, Checkov, Terrascan, tfsec.
How can secrets be managed securely in Terraform configurations?;By integrating with tools like HashiCorp Vault, AWS Secrets Manager, Azure Key Vault, or GCP Secret Manager.
What is Terragrunt?;A thin wrapper for Terraform that helps manage configurations for multiple environments/modules and keeps backend/provider configurations DRY.
What does Infracost do?;Shows cloud cost estimates for Terraform changes before they are applied.
What is Atlantis?;An open-source application for Terraform pull request automation.
What is the purpose of check blocks (Terraform v1.5+)?;To define infrastructure health checks or data validation rules outside the normal resource lifecycle, run during the plan phase, generating warnings for failures.
How do lifecycle precondition and postcondition blocks differ from check blocks?;They validate resource state before or after changes are planned/applied, and failed conditions halt the Terraform run with an error.
What is the recommended file for defining input variables?;variables.tf.
What is the recommended file for defining output values?;outputs.tf.
What is the terraform {} block typically placed?;In terraform.tf or versions.tf.
What is the conventional naming convention for resources, variables, etc., in Terraform?;snake_case.
What is a key best practice for provider credentials?;Configure providers with the minimum necessary permissions and avoid hardcoding credentials.
How can infrastructure drift be detected?;By regularly running terraform plan or terraform plan -refresh-only.
What is Terraform?;Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently.
What category of tools does Terraform fall under?;Infrastructure as Code (IaC) tools.
Is Terraform cloud-specific or cloud-agnostic?;Terraform is cloud-agnostic.
What is the difference between declarative and imperative IaC tools?;Declarative tools (like Terraform) define the desired end state, while imperative tools specify the sequence of actions to perform.
What are the main components of Terraform's architecture?;Terraform Core, Terraform State File, and Providers.
What is the first command you typically run in a new Terraform project?;terraform init.
What does terraform init do besides downloading providers?;It initializes the backend and downloads modules. It also creates a .terraform.lock.hcl file.
What is the purpose of the .terraform.lock.hcl file?;It records the specific provider versions and dependencies used, ensuring consistent installations.
What is stored in the Terraform state file?;Metadata about every resource and data object provisioned by Terraform, mapping configuration to real-world resources.
Why should Terraform state files be protected?;They can contain sensitive information (e.g., database passwords).
What are the two main ways state can be stored?;Locally (default) or remotely.
What are the cons of using a local backend for state?;Sensitive values in plain text, uncollaborative, and requires manual operation.
Name an advantage of using a remote backend.;Encrypts sensitive data, enables collaboration, allows for automation.
What AWS services are commonly used for a self-managed remote backend?;AWS S3 (for storing the state file) and DynamoDB (for state locking).
What is the required hash key for a DynamoDB table used for Terraform state locking?;LockID.
What does terraform plan do?;It compares the desired state (configuration) with the actual state (state file) and shows the changes that will be applied.
What does terraform apply do?;It executes the plan generated by terraform plan, makes API calls to the cloud provider, and updates the state file.
What should you be cautious about when using terraform destroy?;It deletes all resources managed by the configuration and should be used with extreme caution, especially in production.
How do you configure the Terraform Cloud backend in your configuration?;In the terraform block with backend "remote", specifying organization and workspace.
What are input variables in Terraform used for?;To make configurations more flexible and reusable by parameterizing them.
How are input variables referenced in Terraform configuration?;Using var.variable_name.
What are local variables (locals) used for in Terraform?;To define temporary, reusable values within a configuration's scope, referenced as local.variable_name.
What is the purpose of output variables in Terraform?;To expose values from your infrastructure (e.g., IP addresses of created servers).
Which file is commonly used to automatically load variable definitions if present?;terraform.tfvars or *.auto.tfvars.
How can you mark a variable as sensitive in Terraform?;By setting sensitive = true in its variable block.
What does the depends_on meta-argument achieve?;It explicitly defines dependencies between resources when Terraform cannot infer them.
What is the count meta-argument used for?;To create multiple identical or near-identical copies of a resource.
What is the for_each meta-argument used for?;To create multiple similar resources based on a map or set, providing more control over individual instances.
What is a common use case for the create_before_destroy lifecycle argument?;To achieve zero-downtime updates for resources that require replacement.
What is the ignore_changes lifecycle argument used for?;To tell Terraform to ignore changes to specific resource attributes made outside of Terraform.
What do provisioners allow you to do in Terraform?;Execute actions on a local or remote machine after a resource is created.
Name two types of provisioners.;file, local-exec, remote-exec.
Why should provisioners be used sparingly?;They can make infrastructure management less predictable; alternatives like cloud-init or baked-in configurations are often preferred.
What is a Terraform module?;A container for multiple resources bundled together for reusability.
Name two benefits of using modules.;Raises abstraction, promotes reusability, hides complexity, encapsulates best practices.
Where can Terraform modules be sourced from?;Local paths, Terraform Registry, Git repositories, S3 buckets.
What is the typical format for sourcing a module from the public Terraform Registry?;<NAMESPACE>/<NAME>/<PROVIDER>.
What are Terraform Workspaces (CLI) primarily used for?;Managing multiple state files for the same configuration, often for different environments like dev, staging, prod.
What is an alternative to Terraform Workspaces for managing multiple environments?;Using a directory structure with separate configurations per environment.
What does the terraform remote state data source allow?;Referencing outputs from a completely separate Terraform configuration.
What is Terratest?;A Go library for writing automated tests for infrastructure code.
What does terraform fmt do?;Formats Terraform code according to a canonical style.
What does terraform validate check?;Syntactical correctness and whether all required arguments for resources are provided.
What is a "gotcha" if you change a resource's name in Terraform configuration?;Terraform may delete the old resource and create a new one.
What can happen if infrastructure is changed "out-of-band" (outside of Terraform)?;The Terraform state becomes inaccurate, potentially leading to errors or unintended changes on the next apply.